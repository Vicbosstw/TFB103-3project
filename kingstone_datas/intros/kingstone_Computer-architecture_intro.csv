ISBN,書籍簡介
9786203847314,"

Computer architectures describe how a computer's hardware components are connected, as well as the data transmission and processing methods used. Different computer architecture configurations have been designed to improve data processing by speeding up data movement. The CPU is at the middle of the basic architecture, with main memory and an input/output system on each side The central input/output controller is a second device configuration . The main memory is the place in the computer system from which all data and instructions flow in and out in a third computer architecture. A fourth computer architecture connects all devices in a computer system with a common data and control bus . The dual bus architecture is an improvement over the single shared central bus architecture. To improve overall performance, this architecture either separates data and control over the two buses or shares them.
                    
"
9781681739861,"

Artificial intelligence has already enabled pivotal advances in diverse fields, yet its impact on computer architecture has only just begun. In particular, recent work has explored broader application to the design, optimization, and simulation of computer architecture. Notably, machine-learning-based strategies often surpass prior state-of-the-art analytical, heuristic, and human-expert approaches. This book reviews the application of machine learning in system-wide simulation and run-time optimization, and in many individual components such as caches/memories, branch predictors, networks-on-chip, and GPUs. The book further analyzes current practice to highlight useful design strategies and identify areas for future work, based on optimized implementation strategies, opportune extensions to existing work, and ambitious long term possibilities. Taken together, these strategies and techniques present a promising future for increasingly automated computer architecture designs.
                    
"
9781681739847,"

Artificial intelligence has already enabled pivotal advances in diverse fields, yet its impact on computer architecture has only just begun. In particular, recent work has explored broader application to the design, optimization, and simulation of computer architecture. Notably, machine-learning-based strategies often surpass prior state-of-the-art analytical, heuristic, and human-expert approaches. This book reviews the application of machine learning in system-wide simulation and run-time optimization, and in many individual components such as caches/memories, branch predictors, networks-on-chip, and GPUs. The book further analyzes current practice to highlight useful design strategies and identify areas for future work, based on optimized implementation strategies, opportune extensions to existing work, and ambitious long term possibilities. Taken together, these strategies and techniques present a promising future for increasingly automated computer architecture designs.
                    
"
9781641724647,0
9780367573959,"

This easy to read textbook provides an introduction to computer architecture, while focusing on the essential aspects of hardware that programmers need to know. The topics are explained from a programmer's point of view, and the text emphasizes consequences for programmers. Divided in five parts, the book covers the basics of digital logic, gates, and data paths, as well as the three primary aspects of architecture: processors, memories, and I/O systems. The book also covers advanced topics of parallelism, pipelining, power and energy, and performance. A hands-on lab is also included. The second edition contains three new chapters as well as changes and updates throughout.
                    
"
9789811581342,"

This book constitutes the refereed proceedings of the 13th Conference on Advanced Computer Architecture, ACA 2020, held in Kunming, China, in August 2020. Due to the COVID-19 pandemic the conference was held online. The 24 revised full papers presented were carefully reviewed and selected from 105 submissions. The papers of this volume are organized in topical sections on: interconnection network, router and network interface architecture; accelerator-based, application-specific and reconfigurable architecture; processor, memory, and storage systems architecture; model, simulation and evaluation of architecture; new trends of technologies and applications.
                    
"
9780970112477,"

Learn computer architecture and get practical ""hands on"" experience using an FPGA while studying at home. A working model of a 32-bit ARM processor is gradually built from basic principals of computer architecture. Field Programmable Gate Arrays (FPGA) provide flexible digital electronics platforms that can be organized as a CPU, a neural net, or almost any other digital circuit. They are the digital equivalent of shape-shifters in science fiction.The FPGA is first introduced graphically through operational models of individual logic gates and structures like buses and decoders. Next, the Verilog coding begins with simple circuit examples and culminates with a CPU that runs ARM machine code. Programs can even be entered in symbolic assembly language which is compiled into 100% ARM machine code by macros, tasks, and functions written in the Verilog language. This CPU imitation can be run at full speed, stepped through with breakpoints, or paused within the fetch, decode, and execute cycle.Over 150 illustrations accompany detailed descriptions for setting up the FPGA and walking through each of the nearly 100 Verilog examples. All source code examples can be downloaded from GitHub and use the Intel(R) Quartus(R) Prime software along with a Terasic DE10-Lite FPGA development board. The DE10-Lite is available for purchase for less than $100 at many Internet sites, and the Intel(R) Quartus(R) Prime Lite Edition is available as a free download from Intel. Other FPGA boards and other Verilog software can be used, but slight modifications to the examples may be necessary.
                    
"
9780970112484,"

Learn computer architecture and get practical ""hands on"" experience using an FPGA while studying at home. A working model of a 32-bit ARM processor is gradually built from basic principals of computer architecture. Field Programmable Gate Arrays (FPGA) provide flexible digital electronics platforms that can be organized as a CPU, a neural net, or almost any other digital circuit. They are the digital equivalent of shape-shifters in science fiction. The FPGA is first introduced graphically through operational models of individual logic gates and structures like buses and decoders. Next, the Verilog coding begins with simple circuit examples and culminates with a CPU that runs ARM machine code. Programs can even be entered in symbolic assembly language which is compiled into 100% ARM machine code by macros, tasks, and functions written in the Verilog language. This CPU imitation can be run at full speed, stepped through with breakpoints, or paused within the fetch, decode, and execute cycle. Over 150 illustrations accompany detailed descriptions for setting up the FPGA and walking through each of the nearly 100 Verilog examples. All source code examples can be downloaded from GitHub and use the Intel(R) Quartus(R) Prime software along with a Terasic DE10-Lite FPGA development board. The DE10-Lite is available for purchase for less than $100 at many Internet sites, and the Intel(R) Quartus(R) Prime Lite Edition is available as a free download from Intel. Other FPGA boards and other Verilog software can be used, but slight modifications to the examples may be necessary.
                    
"
9783639416992,"

Revision with unchanged content. Modern microprocessors make use of speculation, or predictions about future program behavior, to optimize the execution of programs. Perceptrons are simple neural networks that can be highly useful in speculation for their ability to examine larger quantities of available data than more commonly used approaches, and identify which data lead to accurate results. This work first studies how perceptrons can be made to predict accurately when they directly replace the traditional pattern table predictor. Different training me-thods, perceptron topologies, and interference reduction strategies are evaluated. Perceptrons are then applied to two speculative applications: data value prediction and dataflow critical path prediction. Several novel perce-ptron-based prediction strategies are proposed for each application that can take advantage of a wider scope of past data in making predictions than previous predictors could. These predictors are evaluated against local table-based approaches on a custom cycle-accurate processor simulator, and are shown on average to have both superior accuracy and higher instruction-per-cycle performance. This work is addressed to computer architects and com-puter engineering researchers.
                    
"
9781838984397,"

A no-nonsense, practical guide to current and future processor and computer architectures, enabling you to design computer systems and develop better software applications across a variety of domainsKey Features  Understand digital circuitry with the help of transistors, logic gates, and sequential logic Examine the architecture and instruction sets of x86, x64, ARM, and RISC-V processors Explore the architecture of modern devices such as the iPhone X and high-performance gaming PCs  Book Description Are you a software developer, systems designer, or computer architecture student looking for a methodical introduction to digital device architectures but overwhelmed by their complexity? This book will help you to learn how modern computer systems work, from the lowest level of transistor switching to the macro view of collaborating multiprocessor servers. You'll gain unique insights into the internal behavior of processors that execute the code developed in high-level languages and enable you to design more efficient and scalable software systems. The book will teach you the fundamentals of computer systems including transistors, logic gates, sequential logic, and instruction operations. You will learn details of modern processor architectures and instruction sets including x86, x64, ARM, and RISC-V. You will see how to implement a RISC-V processor in a low-cost FPGA board and how to write a quantum computing program and run it on an actual quantum computer. By the end of this book, you will have a thorough understanding of modern processor and computer architectures and the future directions these architectures are likely to take. What you will learn  Get to grips with transistor technology and digital circuit principles Discover the functional elements of computer processors Understand pipelining and superscalar execution Work with floating-point data formats Understand the purpose and operation of the supervisor mode Implement a complete RISC-V processor in a low-cost FPGA Explore the techniques used in virtual machine implementation Write a quantum computing program and run it on a quantum computer  Who this book is for This book is for software developers, computer engineering students, system designers, reverse engineers, and anyone looking to understand the architecture and design principles underlying modern computer systems from tiny embedded devices to warehouse-size cloud server farms. A general understanding of computer processors is helpful but not required.
                    
"
9781073846351,"

Computer Architecture MCQs: Multiple Choice Questions and Answers (Quiz & Tests with Answer Keys) PDF covers placement test worksheets for competitive exam with 750 solved MCQs. ""Computer Architecture MCQ"" with answers covers basic concepts, theory and analytical assessment tests. ""Computer Architecture Quiz"" PDF study guide helps to practice test questions from exam prep notes. Computer science quick study guide provides 750 verbal, quantitative, and analytical reasoning solved MCQs. Computer Architecture Multiple Choice Questions and Answers (MCQs) PDF book covers solved quiz questions and answers on chapters: Assessing computer performance, computer architecture and organization, computer arithmetic, computer language and instructions, computer memory review, computer technology, data level parallelism and GPU architecture, embedded systems, exploiting memory, instruction level parallelism, instruction set principles, interconnection networks, memory hierarchy design, networks, storage and peripherals, pipelining in computer architecture, pipelining performance, processor datapath and control, quantitative design and analysis, request level and data level parallelism, storage systems, thread level parallelism worksheets for college and university revision guide. ""Computer Architecture Quiz Questions and Answers"" PDF book covers beginner's questions, exam's workbook, and certification exam prep with answer key. Computer Architecture MCQs, a quick study guide from lecture notes & tutorials provides exam practice tests. ""Computer Architecture MCQs"" worksheets with answers PDF covers problems, terminology and definitions in self-assessment workbook with computer science practice tests on chapters: Chapter 1: Assessing Computer Performance MCQsChapter 2: Computer Architecture and Organization MCQsChapter 3: Computer Arithmetic MCQsChapter 4: Computer Language and Instructions MCQsChapter 5: Computer Memory Review MCQsChapter 6: Computer Technology MCQsChapter 7: Data Level Parallelism and GPU Architecture MCQsChapter 8: Embedded Systems MCQsChapter 9: Exploiting Memory MCQsChapter 10: Instruction Level Parallelism MCQsChapter 11: Instruction Set Principles MCQsChapter 12: Interconnection Networks MCQsChapter 13: Memory Hierarchy Design MCQsChapter 14: Networks, Storage and Peripherals MCQsChapter 15: Pipelining in Computer Architecture MCQsChapter 16: Pipelining Performance MCQsChapter 17: Processor Datapath and Control MCQsChapter 18: Quantitative Design and Analysis MCQsChapter 19: Request Level and Data Level Parallelism MCQsChapter 20: Storage Systems MCQsChapter 21: Thread Level Parallelism MCQs Practice test ""Data Level Parallelism and GPU Architecture MCQ"" with answers PDF by solved MCQs questions: Loop level parallelism detection, GPU architecture issues, GPU computing, graphics processing units, SIMD instruction set extensions, and vector architecture design.Practice test ""Embedded Systems MCQ"" with answers PDF by solved MCQs questions: Introduction to embedded systems, embedded multiprocessors, embedded applications, and signal processing.Practice test ""Instruction Level Parallelism MCQ"" with answers PDF by solved MCQs questions: Instruction level parallelism, ILP approaches and memory system, limitations of ILP, exploiting ILP, advanced branch prediction and techniques and speculation, basic compiler techniques, dynamic scheduling algorithm, data hazards, hardware based speculation, and intel core i7.Practice test ""Pipelining in Computer Architecture MCQ"" with answers PDF by solved MCQs questions: Introduction to pipelining, implementation issues of pipelining, pipelining crosscutting issues, pipelining basic, fallacies and pitfalls, MIPS pipeline, multicycle, MIPS R4000 pipeline, and intermediate concepts. and many more chapters!
                    
"
9789811324222,"

This book constitutes the refereed proceedings of the 12th Annual Conference on Advanced Computer Architecture, ACA 2018, held in Yingkou, China, in August 2018. The 17 revised full papers presented were carefully reviewed and selected from 80 submissions. The papers of this volume are organized in topical sections on: accelerators; new design explorations; towards efficient ML/AI; parallel computing system.
                    
"
9780124077270,0
9781842654927,0
9781119183938,"

Use your Raspberry Pi to get smart about computing fundamentals In the 1980s, the tech revolution was kickstarted by a flood of relatively inexpensive, highly programmable computers like the Commodore. Now, a second revolution in computing is beginning with the Raspberry Pi. Learning Computer Architecture with the Raspberry Pi is the premier guide to understanding the components of the most exciting tech product available. Thanks to this book, every Raspberry Pi owner can understand how the computer works and how to access all of its hardware and software capabilities. Now, students, hackers, and casual users alike can discover how computers work with Learning Computer Architecture with the Raspberry Pi. This book explains what each and every hardware component does, how they relate to one another, and how they correspond to the components of other computing systems. You'll also learn how programming works and how the operating system relates to the Raspberry Pi's physical components.  Co-authored by Eben Upton, one of the creators of the Raspberry Pi, this is a companion volume to the Raspberry Pi User Guide An affordable solution for learning about computer system design considerations and experimenting with low-level programming Understandable descriptions of the functions of memory storage, Ethernet, cameras, processors, and more Gain knowledge of computer design and operation in general by exploring the basic structure of the Raspberry Pi  The Raspberry Pi was created to bring forth a new generation of computer scientists, developers, and architects who understand the inner workings of the computers that have become essential to our daily lives. Learning Computer Architecture with the Raspberry Pi is your gateway to the world of computer system design.
                    
"
9781627053532,0
9780136156703,0
9781118900420,0
9780136060598,0
9780123838728,0
9781463706326,0
9781606920756,0
9780123704900,0
9780123704979,0
9780763772239,0
9780071362078,"

A problem/solution manual, integrating general principles and laboratory exercises, that provides students with the hands-on experience needed to master the basics of modern computer system design Features more than 200 detailed problems, with step-by-step solutions; many detailed graphics and charts; chapter summaries with additional ""rapid-review"" questions; and expert sidebar tips Describes analytical methods for quantifying real-world design choices regarding instruction sets, pipelining, cache, memory, I/O, and other critical hardware and software elements involved in building computers An ideal educational resource for the more than 70,000 undergraduate and graduate students who, each year, enroll in computer architecture and related courses
                    
"
